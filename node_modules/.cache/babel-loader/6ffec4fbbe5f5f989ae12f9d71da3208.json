{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/michal/Documents/mynewtodo/src/components/TodoItem/index.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport { connect } from 'react-redux';\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n\n    this.markComplete = (e, id) => {\n      this.props.dispatch({\n        type: 'toogleTodo',\n        payload: id\n      });\n    };\n\n    this.delTodo = (e, id) => {\n      this.props.dispatch({\n        type: 'delTodo',\n        payload: id\n      });\n    };\n  }\n\n  render() {\n    console.log('todo', this.props.todo);\n    const {\n      id,\n      title\n    } = this.props.todo;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newTodo\",\n      style: this.getStyle(),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: e => this.markComplete(e, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), \" \", ' ', title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => this.delTodo(e, this.props.todo.id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default connect()(TodoItem);","map":{"version":3,"sources":["/home/michal/Documents/mynewtodo/src/components/TodoItem/index.js"],"names":["React","Component","connect","TodoItem","getStyle","textDecoration","props","todo","completed","markComplete","e","id","dispatch","type","payload","delTodo","render","console","log","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAGA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACpCG,QADoC,GACzB,MAAM;AACb,aAAO;AACHC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAD1D,OAAP;AAGH,KALmC;;AAAA,SAOpCC,YAPoC,GAOrB,CAACC,CAAD,EAAIC,EAAJ,KAAU;AACpB,WAAKL,KAAL,CAAWM,QAAX,CAAoB;AACjBC,QAAAA,IAAI,EAAE,YADW;AAEjBC,QAAAA,OAAO,EAAEH;AAFQ,OAApB;AAIF,KAZiC;;AAAA,SAcpCI,OAdoC,GAc1B,CAACL,CAAD,EAAIC,EAAJ,KAAW;AACjB,WAAKL,KAAL,CAAWM,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAE,SADU;AAEhBC,QAAAA,OAAO,EAAEH;AAFO,OAApB;AAID,KAnBiC;AAAA;;AAsBpCK,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKZ,KAAL,CAAWC,IAA/B;AACA,UAAM;AAACI,MAAAA,EAAD;AAAKQ,MAAAA;AAAL,QAAc,KAAKb,KAAL,CAAWC,IAA/B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE,KAAKH,QAAL,EAAhC;AAAA,6BACG;AAAA,gCACK;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,EAAqBC,EAArB;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADL,OAC2E,GAD3E,EAEKQ,KAFL,eAGI;AAAQ,UAAA,OAAO,EAAGT,CAAD,IAAO,KAAKK,OAAL,CAAaL,CAAb,EAAgB,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,EAAhC,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAlCmC;AAqCxC,eAAeT,OAAO,GAAGC,QAAH,CAAtB","sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\nimport {connect} from 'react-redux'\n\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        return {\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n\n    markComplete = (e, id) =>{\n         this.props.dispatch({\n            type: 'toogleTodo',\n            payload: id\n        })\n      }\n\n    delTodo = (e, id) => {\n        this.props.dispatch({\n            type: 'delTodo',\n            payload: id\n        })\n      }\n\n\n    render() {\n        console.log('todo', this.props.todo)\n        const {id, title} = this.props.todo\n        return (\n            <div className='newTodo' style={this.getStyle()}>\n               <p>\n                    <input type='checkbox' onChange={(e) => this.markComplete(e, id )}/> {' '}\n                   {title}\n                   <button onClick={(e) => this.delTodo(e, this.props.todo.id)} >x</button>\n              </p> \n            </div>\n        )\n    }\n}\n\nexport default connect()(TodoItem);\n"]},"metadata":{},"sourceType":"module"}